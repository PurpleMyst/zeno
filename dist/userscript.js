// ==UserScript==
// @name      Zeno
// @namespace PurpleMyst
// @match     https://meet.google.com/*
// @grant     none
// ==/UserScript==

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ (() => {

eval("// @ts-check\n\n(async function mercator_studio() {\n  \"use strict\";\n\n  // Create shadow root\n  const $host = document.createElement(\"aside\");\n\n  // Create form\n  const $main = document.createElement(\"main\");\n  $main.addEventListener(\"click\", (event) => {\n    if (!$main.classList.contains(\"focus\") && event.target !== $collapse) {\n      $main.classList.add(\"focus\");\n    }\n  });\n\n  const $collapse = document.createElement(\"button\");\n  $collapse.textContent = \"↑ collapse ↑\";\n  $collapse.id = \"collapse\";\n  $collapse.addEventListener(\"click\", () => {\n    $main.classList.remove(\"focus\");\n  });\n\n  const $minimize = document.createElement(\"button\");\n  $minimize.id = \"minimize\";\n  $minimize.title = \"toggle super tiny mode\";\n  $minimize.addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n    $main.classList.toggle(\"minimize\");\n  });\n\n  const $form = document.createElement(\"form\");\n  const $style = document.createElement(\"style\");\n  const fontFamily = `\"Google Sans\", Roboto, RobotDraft, Helvetica, sans-serif, serif`;\n  $style.textContent = `\n* {\n\tbox-sizing: border-box;\n\ttransition: all 200ms;\n}\n*:not(input) {\n\tuser-select: none;\n}\n@media (prefers-reduced-motion) {\n\t* {\n\t\ttransition: all 0s;\n\t}\n}\n:focus {\n\toutline: 0;\n}\nmain {\n\tz-index: 99999;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\twidth: 480px;\n\tmax-width: 100vw;\n\theight: auto;\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tbackground: white;\n\ttransform: translateY(calc(-100% + 3rem));\n\tbox-shadow: 0 .1rem .25rem #0004;\n\tborder-radius: 0 0 .75rem 0;\n\tpadding: 1rem 1rem 0 1rem;\n\toverflow: hidden;\n\tfont-family: ${fontFamily};\n\tfont-size: 1rem;\n\tcursor: pointer;\n}\nbutton{\n\tfont-family: inherit;\n\tfont-size: .8rem;\n}\nmain #collapse {\n\tbackground: white;\n\tcursor: pointer;\n\tmargin-bottom: .5rem;\n}\nmain.focus {\n\ttransform: none;\n\tborder-radius: 0;\n\theight: 100vh;\n\tpadding: 1rem;\n\tcursor: default;\n\toverflow: hidden scroll;\n}\nmain.focus #minimize{\n\tdisplay: none;\n}\nmain.minimize {\n\twidth: 1rem;\n\tpadding-right: 0;\n}\n#minimize {\n\tfont-family: inherit;\n\tfont-size: .5rem;\n\tfont-weight: bold;\n\tcolor: #444;\n\tmargin-left: -1rem;\n\tflex: 0 0 1rem;\n\twidth: 1rem;\n\ttext-align: center;\n\tborder: 0;\n\tbackground: white;\n\tcursor: pointer;\n\toverflow-wrap: anywhere;\n}\n#minimize::before{\n\tcontent: \"◀\";\n\ttransition: inherit;\n}\n#minimize:hover::before,\n.minimize #minimize::before{\n\tmargin-left: -2px;\n}\n.minimize #minimize::before{\n\tcontent: \"▶\";\n}\n.minimize #minimize:hover::before{\n\tmargin-left: 0;\n}\n#previews {\n\tmargin-top: 1rem;\n\theight: 3rem;\n\tdisplay: flex;\n}\n#previews>video,\n#previews>canvas {\n\theight: 100%;\n\twidth: auto;\n\tbackground-image: linear-gradient(90deg,\n\t\thsl( 18, 100%, 68%) 16.7%,\thsl(-10, 100%, 80%) 16.7%,\n\t\thsl(-10, 100%, 80%) 33.3%,\thsl(  5,  90%, 72%) 33.3%,\n\t\thsl(  5,  90%, 72%) 50%,\thsl( 48, 100%, 75%) 50%,\n\t\thsl( 48, 100%, 75%) 66.7%,\thsl( 36, 100%, 70%) 66.7%,\n\t\thsl( 36, 100%, 70%) 83.3%,\thsl( 20,  90%, 70%) 83.3%\n\t);\n\tmargin-right: 1rem;\n}\n#previews>h1 {\n\tflex-grow: 1;\n\tfont-size: 1rem;\n\tfont-weight: normal;\n\ttext-align: center;\n\tcolor: #444;\n\tline-height: 1.5rem;\n}\n:hover>#previews>h1 {\n\ttransform: translateY(.1rem); /* Tiny nudge downwards */\n}\n.focus>#previews>h1 {\n\tdisplay: none;\n}\n.focus>#previews {\n\theight: auto;\n}\n.focus>#previews>* {\n\theight: auto;\n\twidth: calc(50% - .5rem);\n}\n#presets,\nlabel {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n#presets>* {\n\tborder: 0;\n\tbackground: transparent;\n\tflex-grow: 1;\n}\n#presets>:first-child {\n\tborder-radius: 100px 0 0 100px;\n}\n#presets>:last-child {\n\tborder-radius: 0 100px 100px 0;\n}\nlabel {\n\theight: 2rem;\n}\nlabel>*{\n\twidth: calc(100% - 6.5rem);\n}\nlabel>*,\n#collapse {\n\theight: 1.5rem;\n\tborder-radius: 0.75rem;\n\tborder: 0.25rem solid lightgray;\n}\nlabel>:hover,\n#collapse:hover {\n\tborder: 0.25rem solid gray;\n}\n#presets>:hover {\n\tbackground: #0003;\n}\n#presets>:focus {\n\tbackground: black;\n\tcolor: white;\n}\n#presets:focus-within,\n#collapse:focus,\nlabel>:focus {\n\tborder-color: black;\n}\ntextarea {\n\ttext-align: center;\n\tfont-family: inherit;\n\tfont-weight: bold;\n\tresize: none;\n\tline-height: 1;\n}\ninput[type=range] {\n\t-webkit-appearance: none;\n\t--gradient: transparent, transparent;\n\t--rainbow: hsl(0, 80%, 75%), hsl(30, 80%, 75%), hsl(60, 80%, 75%), hsl(90, 80%, 75%), hsl(120, 80%, 75%), hsl(150, 80%, 75%), hsl(180, 80%, 75%), hsl(210, 80%, 75%), hsl(240, 80%, 75%), hsl(270, 80%, 75%), hsl(300, 80%, 75%), hsl(330, 80%, 75%);\n\tbackground: linear-gradient(90deg, var(--gradient)), linear-gradient(90deg, var(--rainbow));\n}\ninput[type=range]::-webkit-slider-thumb {\n\t-webkit-appearance: none;\n\tbackground: white;\n\twidth: 1rem;\n\theight: 1rem;\n\tborder: 0.25rem solid black;\n\tborder-radius: 0.5rem;\n}\ninput[type=range]:focus::-webkit-slider-thumb {\n\tborder-color: white;\n\tbackground: black;\n}\ninput#exposure,\ninput#fog,\ninput#vignette {\n\t--gradient: black, #8880, white\n}\ninput#contrast {\n\t--gradient: gray, #8880\n}\ninput#temperature {\n\t--gradient: #88f, #8880, #ff8\n}\ninput#tint {\n\t--gradient: #f8f, #8880, #8f8\n}\ninput#sepia {\n\t--gradient: #8880, #aa8\n}\ninput#hue,\ninput#rotate {\n\tbackground: linear-gradient(90deg, hsl(0, 80%, 75%), hsl(60, 80%, 75%), hsl(120, 80%, 75%), hsl(180, 80%, 75%), hsl(240, 80%, 75%), hsl(300, 80%, 75%), hsl(0, 80%, 75%), hsl(60, 80%, 75%), hsl(120, 80%, 75%), hsl(180, 80%, 75%), hsl(240, 80%, 75%), hsl(300, 80%, 75%), hsl(0, 80%, 75%))\n}\ninput#saturate {\n\t--gradient: gray, #8880 50%, blue, magenta\n}\ninput#blur {\n\t--gradient: #8880, gray\n}\ninput#scale,\ninput#x,\ninput#y,\ninput#pillarbox,\ninput#letterbox {\n\t--gradient: black, white\n}\n`;\n  $form.append($style);\n\n  // Create inputs\n  const savedValues = JSON.parse(\n    window.localStorage.getItem(\"mercator-studio-values\")\n  );\n\n  /**\n   * @param {string} key\n   */\n  function createInput(key) {\n    const $input = document.createElement(\"input\");\n    $input.id = key;\n    if (key === \"freeze\") {\n      $input.type = \"checkbox\";\n    } else {\n      $input.type = \"range\";\n      $input.min = [\"scale\", \"pillarbox\", \"letterbox\"].includes(key)\n        ? \"0\"\n        : \"-1\";\n      $input.max = \"1\";\n      $input.step = \"0.00001\";\n      $input.value = \"0\";\n    }\n    $input.classList.add(\"input\");\n\n    return $input;\n  }\n\n  const inputs = Object.fromEntries(\n    \"pillarbox,letterbox,freeze\".split(\",\").map((key) => {\n      const $input = createInput(key);\n      if (savedValues) $input.value = savedValues[key];\n      const $label = document.createElement(\"label\");\n      $label.textContent = key;\n      $form.append($label);\n      $label.append($input);\n      return [key, $input];\n    })\n  );\n\n  /** @type {{[k: string]: number}} */\n  const values = Object.fromEntries(\n    Object.entries(inputs).map((entry) => [\n      entry[0],\n      entry[1].valueAsNumber || +entry[1].value,\n    ])\n  );\n\n  /**\n   * @param {HTMLInputElement} $input\n   * @param {number} value\n   */\n  function updateValue($input, value) {\n    values[$input.id] = $input.valueAsNumber = value;\n    window.localStorage.setItem(\n      \"mercator-studio-values\",\n      JSON.stringify(values)\n    );\n  }\n\n  // Right click to individually reset\n  $form.addEventListener(\"contextmenu\", (event) => {\n    if (\n      !(event.target instanceof HTMLInputElement) ||\n      event.target.type !== \"range\"\n    )\n      return;\n    event.preventDefault();\n    updateValue(event.target, 0);\n  });\n\n  // Update value on change\n  $form.addEventListener(\"input\", (event) => {\n    const $input = event.target;\n    if ($input instanceof HTMLInputElement)\n      updateValue($input, $input.valueAsNumber);\n  });\n\n  const $presetsLabel = document.createElement(\"label\");\n  const $presetsCollection = document.createElement(\"div\");\n  $presetsCollection.id = \"reset\";\n\n  const $reset = document.createElement(\"button\");\n  $reset.textContent = $reset.id = \"reset\";\n  $presetsLabel.textContent = \"presets\";\n\n  $presetsCollection.append($reset);\n  $presetsLabel.append($presetsCollection);\n\n  $presetsLabel.addEventListener(\"click\", (event) => {\n    // Cancel refresh\n    event.preventDefault();\n\n    // Reset all\n    Object.values(inputs).forEach((/** @type {any} */ input) => {\n      updateValue(input, 0);\n    });\n  });\n\n  const $previews = document.createElement(\"div\");\n  $previews.id = \"previews\";\n\n  // Create preview video\n  const $video = document.createElement(\"video\");\n  $video.setAttribute(\"playsinline\", \"\");\n  $video.setAttribute(\"autoplay\", \"\");\n  $video.setAttribute(\"muted\", \"\");\n\n  // Create canvases\n  const canvases = Object.fromEntries(\n    [\"buffer\", \"freeze\", \"display\"].map((name) => {\n      const element = document.createElement(\"canvas\");\n      const context = element.getContext(\"2d\");\n      return [name, { element, context }];\n    })\n  );\n\n  // Create title\n\n  const $title = document.createElement(\"h1\");\n\n  $title.textContent = \"↓ Mercator Studio ↓\";\n\n  $previews.append($minimize, $video, canvases.buffer.element, $title);\n\n  // Add UI to page\n  $form.append($presetsLabel);\n\n  $main.append($collapse, $form, $previews);\n\n  $host.append($main);\n  document.body.append($host);\n\n  let drawInterval = 0;\n\n  // Background Blur for Google Meet does this (hello@brownfoxlabs.com)\n\n  class HookedMediaStream extends MediaStream {\n    /**\n     * @param {MediaStream} oldStream\n     */\n    constructor(oldStream) {\n      // Copy original stream settings\n      super(oldStream);\n      $video.srcObject = oldStream;\n\n      const oldStreamSettings = oldStream.getVideoTracks()[0].getSettings();\n\n      const w = oldStreamSettings.width;\n      const h = oldStreamSettings.height;\n      Object.values(canvases).forEach((\n        /** @type {{ element: HTMLCanvasElement; }} */ canvas\n      ) => {\n        canvas.element.width = w;\n        canvas.element.height = h;\n      });\n      const context = canvases.buffer.context;\n      const freeze = {\n        state: false,\n        init: false,\n        image: document.createElement(\"img\"),\n        canvas: canvases.freeze,\n      };\n      inputs.freeze.addEventListener(\"change\", function () {\n        freeze.state = freeze.init = this.checked;\n      });\n\n      context.textAlign = \"center\";\n      context.textBaseline = \"middle\";\n\n      function draw() {\n        context.clearRect(0, 0, w, h);\n\n        // Get values\n        const pillarbox = (values.pillarbox * w) / 2;\n        const letterbox = (values.letterbox * h) / 2;\n\n        if (freeze.init) {\n          // Initialize frozen image\n          freeze.canvas.context.drawImage($video, 0, 0, w, h);\n          let data = freeze.canvas.element.toDataURL(\"image/png\");\n          freeze.image.setAttribute(\"src\", data);\n          freeze.init = false;\n        } else if (freeze.state) {\n          // Draw frozen image\n          context.drawImage(freeze.image, 0, 0, w, h);\n        } else if ($video.srcObject) {\n          // Draw video\n          context.drawImage($video, 0, 0, w, h);\n        } else {\n          // Draw preview stripes if video doesn't exist\n          \"18, 100%, 68%; -10,100%,80%; 5, 90%, 72%; 48, 100%, 75%; 36, 100%, 70%; 20, 90%, 70%\"\n            .split(\";\")\n            .forEach((color, index) => {\n              context.fillStyle = `hsl(${color})`;\n              context.fillRect((index * w) / 6, 0, w / 6, h);\n            });\n        }\n\n        // Pillarbox: crop width\n        if (pillarbox) {\n          context.clearRect(0, 0, pillarbox, h);\n          context.clearRect(w, 0, -pillarbox, h);\n        }\n\n        // Letterbox: crop height\n        if (letterbox) {\n          context.clearRect(0, 0, w, letterbox);\n          context.clearRect(0, h, w, -letterbox);\n        }\n\n        canvases.display.context.clearRect(0, 0, w, h);\n        canvases.display.context.drawImage(canvases.buffer.element, 0, 0);\n      }\n\n      // Redraw at 30FPS\n      clearInterval(drawInterval);\n      drawInterval = setInterval(draw, 33);\n\n      // Create a MediaStream from our display canvas and return it as the new MediaStream\n      // @ts-expect-error\n      const newStream = canvases.display.element.captureStream(30);\n      newStream.addEventListener(\"inactive\", () => {\n        oldStream.getTracks().forEach((\n          /** @type {{ stop: () => void; }} */ track\n        ) => {\n          track.stop();\n        });\n        canvases.display.context.clearRect(0, 0, w, h);\n        $video.srcObject = null;\n      });\n      return newStream;\n    }\n  }\n\n  /**\n   * Intercept the user's camera to hook our patched MediaStream onto it\n   * @param {{ video: unknown; audio: unknown; }} constraints\n   */\n  async function hookedGetUserMedia(constraints) {\n    if (constraints && constraints.video && !constraints.audio) {\n      return new HookedMediaStream(\n        // @ts-expect-error\n        await navigator.mediaDevices.oldGetUserMedia(constraints)\n      );\n    } else {\n      // @ts-expect-error\n      return navigator.mediaDevices.oldGetUserMedia(constraints);\n    }\n  }\n\n  // @ts-expect-error\n  MediaDevices.prototype.oldGetUserMedia = MediaDevices.prototype.getUserMedia;\n  MediaDevices.prototype.getUserMedia = hookedGetUserMedia;\n})();\n\n\n//# sourceURL=webpack://zeno/./src/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/main.js"]();
/******/ 	
/******/ })()
;